generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  quizzes       Quiz[]
}

model Quiz {
  id        String     @id @default(cuid())
  title     String
  image     String
  User      User       @relation(fields: [userId], references: [id])
  userId    String
  Category  Category   @relation(fields: [category], references: [name])
  category  String
  questions Question[]
  createdAt DateTime @default(now())
  attempts  Int @default(0)
}

model Category {
  name    String @unique
  quizzes Quiz[]
}

model Question {
  id      String   @id @default(cuid())
  title   String
  Quiz    Quiz     @relation(fields: [quizId], references: [id])
  quizId  String
  answers Answer[]
}

model Answer {
  id         String   @id @default(cuid())
  Question   Question @relation(fields: [questionId], references: [id])
  questionId String
  text       String
  correct    Boolean
}
